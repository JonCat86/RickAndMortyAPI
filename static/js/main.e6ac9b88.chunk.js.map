{"version":3,"sources":["helper/helpFetch.js","components/CharCard.js","components/CharModal.js","components/Searcher.js","assets/rickandmortyportal.png","components/CharGallery.js","components/EpisodeCard.js","components/EpisodesList.js","assets/logo.png","components/Header.js","App.js","index.js"],"names":["helpFetch","url","a","fetch","res","json","CharCard","char","setCharUrl","setModalOn","className","onClick","src","image","alt","name","CharModal","modalOn","setCharData","gender","origin","species","status","Searcher","handleSearch","useState","searchValue","setSearchValue","onSubmit","e","preventDefault","type","id","onChange","target","value","CharGallery","charData","charUrl","data","setData","isLoaded","setIsLoaded","setNext","useEffect","fetchData","fetchChar","results","info","next","search","searchFetch","error","map","el","length","rickandmortyportal","EpisodeCard","episode","air_date","EpisodesList","isDataLoaded","setIsDataLoaded","loadEpisodes","season","episdoes","includes","push","Header","setSection","handleClick","section","img","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6ac9b88.chunk.js","sourcesContent":["export const helpFetch = async (url) => {\r\n  try {\r\n    const res = await fetch(url);\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {}\r\n};\r\n","const CharCard = ({ char, setCharUrl, setModalOn }) => {\r\n  const handleClick = () => {\r\n    setCharUrl(char.url);\r\n    setModalOn(\"modal-open\");\r\n  };\r\n  return (\r\n    <div className=\"char-card\" onClick={handleClick}>\r\n      <div className=\"char-img-container\">\r\n        <img className=\"char-img\" src={char.image} alt={char.name} />\r\n      </div>\r\n      <h2>{char.name}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharCard;\r\n","const CharModal = ({ char, modalOn, setModalOn, setCharData, setCharUrl }) => {\r\n  const handleClick = () => {\r\n    setModalOn(\"\");\r\n    setCharData(null);\r\n    setCharUrl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={`char-modal ${modalOn}`} onClick={handleClick}>\r\n      <div className=\"char-modal-box\">\r\n        <img className=\"char-modal-img\" src={char.image} alt={char.name} />\r\n        <div className=\"char-modal-info\">\r\n          <h2>{char.name}</h2>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th>Gender: </th>\r\n                <td>{char.gender}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Origin: </th>\r\n                <td>{char.origin.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Species: </th>\r\n                <td>{char.species}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Status: </th>\r\n                <td>{char.status}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharModal;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Searcher = ({ handleSearch }) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSearch(searchValue);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Search:</h3>\r\n      <input\r\n        className=\"search-bar\"\r\n        type=\"search\"\r\n        name=\"search-bar\"\r\n        id=\"search-bar\"\r\n        onChange={handleChange}\r\n        value={searchValue}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Searcher;\r\n","export default __webpack_public_path__ + \"static/media/rickandmortyportal.a218ca22.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { helpFetch } from \"../helper/helpFetch\";\r\nimport CharCard from \"./CharCard\";\r\nimport CharModal from \"./CharModal\";\r\nimport Searcher from \"./Searcher\";\r\nimport rickandmortyportal from \"../assets/rickandmortyportal.png\";\r\n\r\nconst CharGallery = () => {\r\n  const [charData, setCharData] = useState(null);\r\n  const [charUrl, setCharUrl] = useState(null);\r\n  const [modalOn, setModalOn] = useState(\"\");\r\n  const [data, setData] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [next, setNext] = useState(null);\r\n\r\n  // fetch for Modal\r\n  useEffect(() => {\r\n    const fetchChar = async () => {\r\n      const fetchData = await helpFetch(charUrl);\r\n      setCharData(fetchData);\r\n    };\r\n    charUrl && fetchChar();\r\n  }, [charUrl]);\r\n\r\n  // main fetch\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await helpFetch(\"https://rickandmortyapi.com/api/character\");\r\n      setData(res.results);\r\n      setNext(res.info.next);\r\n      setIsLoaded(true);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // search\r\n  const handleSearch = (search) => {\r\n    setIsLoaded(false);\r\n    setData([]);\r\n    const searchFetch = async (url) => {\r\n      const res = await helpFetch(url);\r\n      !res.error ? setData((data) => [...data, ...res.results]) : setData([]);\r\n      res.info.next ? searchFetch(res.info.next) : setIsLoaded(true);\r\n    };\r\n    const fetchData = async () => {\r\n      const res = await helpFetch(\"https://rickandmortyapi.com/api/character\");\r\n      setData(res.results);\r\n      setNext(res.info.next);\r\n      setIsLoaded(true);\r\n    };\r\n    search === \"\"\r\n      ? fetchData()\r\n      : searchFetch(\r\n          `https://rickandmortyapi.com/api/character/?name=${search}`\r\n        );\r\n  };\r\n\r\n  // more btn\r\n\r\n  return (\r\n    <section className=\"char-gallery\">\r\n      <h1>CHARACTERS</h1>\r\n      <Searcher handleSearch={handleSearch} />\r\n      <div className=\"char-gallery-container\">\r\n        {isLoaded &&\r\n          data.map((el) => (\r\n            <CharCard\r\n              key={el.id}\r\n              char={el}\r\n              setCharUrl={setCharUrl}\r\n              setModalOn={setModalOn}\r\n            />\r\n          ))}\r\n        {/* els condicionals estan b√©?? */}\r\n        {(data && data.length === 0) ||\r\n          (!isLoaded && (\r\n            <img className=\"portal\" src={rickandmortyportal} alt=\"portal\" />\r\n          ))}\r\n      </div>\r\n      {charData && (\r\n        <CharModal\r\n          char={charData}\r\n          modalOn={modalOn}\r\n          setModalOn={setModalOn}\r\n          setCharData={setCharData}\r\n          setCharUrl={setCharUrl}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharGallery;\r\n","const EpisodeCard = ({ episode }) => {\r\n  return (\r\n    <div className=\"episode-card\">\r\n      <p>{episode.episode}</p>\r\n      <p>{episode.name}</p>\r\n      <p>{episode.air_date}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodeCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { helpFetch } from \"../helper/helpFetch\";\r\nimport EpisodeCard from \"./EpisodeCard\";\r\n\r\nconst EpisodesList = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData([]);\r\n    const fetchData = async (url) => {\r\n      const res = await helpFetch(url);\r\n      setData((data) => [...data, ...res.results]);\r\n      res.info.next ? await fetchData(res.info.next) : setIsDataLoaded(true);\r\n    };\r\n    fetchData(\"https://rickandmortyapi.com/api/episode\");\r\n  }, []);\r\n\r\n  const loadEpisodes = (season) => {\r\n    const episdoes = [];\r\n    data.map(\r\n      (el) =>\r\n        el.episode.includes(season) &&\r\n        episdoes.push(<EpisodeCard key={el.id} episode={el} />)\r\n    );\r\n    return episdoes;\r\n  };\r\n\r\n  return (\r\n    <section className=\"episode-list\">\r\n      <h1>EPISODES</h1>\r\n      <h2>Season 1</h2>\r\n      {isDataLoaded && loadEpisodes(\"S01\")}\r\n      <h2>Season 2</h2>\r\n      {isDataLoaded && loadEpisodes(\"S02\")}\r\n      <h2>Season 3</h2>\r\n      {isDataLoaded && loadEpisodes(\"S03\")}\r\n      <h2>Season 4</h2>\r\n      {isDataLoaded && loadEpisodes(\"S04\")}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EpisodesList;\r\n","export default __webpack_public_path__ + \"static/media/logo.027363c0.png\";","import img from \"../assets/logo.png\";\r\nconst Header = ({ setSection }) => {\r\n  const handleClick = (section) => {\r\n    setSection(section);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <img className=\"header-img\" src={img} alt=\"logo\" />\r\n      <ul>\r\n        <li onClick={() => handleClick(\"character\")}>Characters</li>\r\n        <li onClick={() => handleClick(\"episode\")}>Episodes</li>\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\nimport CharGallery from \"./components/CharGallery\";\nimport EpisodesList from \"./components/EpisodesList\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [section, setSection] = useState(\"character\");\n\n  return (\n    <div>\n      <Header setSection={setSection} />\n      {section === \"character\" ? <CharGallery /> : <EpisodesList />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}